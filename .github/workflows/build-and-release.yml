name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  
jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build executable
      run: |
        pyinstaller --onefile --console --name="长截图切分工具" --icon=NONE split_screenshot.py
    
    - name: Create release directory
      run: |
        mkdir release
        copy dist\长截图切分工具.exe release\
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: screenshot-splitter-windows
        path: release/
        retention-days: 30

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: screenshot-splitter-windows
        path: ./release
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./release/*
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## 🖼️ 长截图切分工具 - 新版本发布
          
          ### ✨ 功能特性
          - 🔪 智能切分：将长截图切分成多个指定高度的图片
          - 📄 PDF生成：自动将切分后的图片合并成PDF文件
          - 🖱️ 拖拽支持：支持直接拖拽图片文件到程序上
          - 📂 智能命名：根据原图片名称自动生成输出文件夹和PDF文件名
          - 🎯 格式支持：支持 JPG、PNG、BMP、GIF、TIFF 等常见图片格式
          
          ### 🚀 使用方法
          1. 下载 `长截图切分工具.exe`
          2. 双击运行或将图片拖拽到程序上
          3. 程序会自动处理并生成切分图片和PDF文件
          
          ### 📋 系统要求
          - Windows 10/11 (64-bit)
          - 无需安装Python或其他依赖
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 